name: Deploy Assets

on:
  push:
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    runs-on: ubuntu-20.04
    name: "Poetry build"
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install deps
        # TODO simplyfy this when poetry1.2 lands
        run: |
          pip install --user poetry
          pip install .[dev]

      - name: Bump poetry version
        # TODO simplyfy this when poetry1.2 lands
        run: |
          echo "github ref: ${{ github.ref }}"
          echo "poetry version before: "`python3 -m poetry version --short`

          export rawref=${{ github.ref }} \
            && python3 -m poetry version ${rawref/refs\/tags\//}

          echo "poetry version after: "`python3 -m poetry version --short`

      - name: Build dist
        run: |
          python3 -m poetry build

      - name: Build docs
        run: |
          sphinx-apidoc \
            --templatedir=docs/src/templates \
            --separate \
            --module-first \
            --force \
            -o docs/src/apidoc src/drytoml
          sphinx-build docs/src docs/build


      - name: Publish to pypi
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m poetry publish \
            -u $PYPI_USERNAME \
            -p $PYPI_PASSWORD

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs/build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
